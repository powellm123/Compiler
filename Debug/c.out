# FRAME					#main this 
START	MOV	R1	SP
	LDR	R2	FREE
	CMP	R1	R2
	BLT	R1	ERROR
	MOV	R10	FP
	MOV	R14	SP
	ADI	SP	-4
	STR	R10	SP
	ADI	SP	-4
# Put this onto ARS			
	LDR	R8	l104
# END Put this onto ARS			
	STR	R8	SP
	ADI	SP	-4
# CALL					#main  
	MOV	R10	PC
	ADI	R10	21
	MOV	FP	R14
	STR	R10	FP
	JMP	main	
# QUIT					#  
ERROR	TRP	0	
# FUNC					#F101  
DemoC()	ADI	SP	0
# RTN					#  
	LDR	R15	FP
	MOV	R11	FP
	ADI	R11	-4
	LDR	R14	R11
	MOV	SP	FP
	MOV	FP	R14
	JMR	R15	
# FUNC					#F103  
fib(int)	ADI	SP	-32
# Boolean					#l104 V102 t134
	LDR	R3	l104
	MOV	R12	FP
	ADI	R12	-12
	LDR	R4	R12
	CMP	R4	R3
	BRZ	R4	BRN0
	CMP	R4	R4
	MOV	R12	FP
	ADI	R12	-16
	STR	R4	R12
	JMP	BRNEND0	
BRN0	LDR	R4	l106
	MOV	R12	FP
	ADI	R12	-16
	STR	R4	R12
BRNEND0	CMP	R13	R13
# Branch					#t134 IFSKIP0 
	MOV	R12	FP
	ADI	R12	-16
	LDR	R3	R12
	BRZ	R3	IFSKIP0
# RETURN					#l104  
	LDR	R15	FP
	MOV	R11	FP
	ADI	R11	-4
	LDR	R14	R11
	LDR	R3	l104
	STR	R3	FP
	MOV	SP	FP
	MOV	FP	R14
	JMR	R15	
# JMP					#ELSESKIP0  
	JMP	ELSESKIP0	
# Boolean					#l106 V102 t135
IFSKIP0	LDR	R3	l106
	MOV	R12	FP
	ADI	R12	-12
	LDR	R4	R12
	CMP	R4	R3
	BRZ	R4	BRN1
	CMP	R4	R4
	MOV	R12	FP
	ADI	R12	-20
	STR	R4	R12
	JMP	BRNEND1	
BRN1	LDR	R4	l106
	MOV	R12	FP
	ADI	R12	-20
	STR	R4	R12
BRNEND1	CMP	R13	R13
# Branch					#t135 IFSKIP1 
	MOV	R12	FP
	ADI	R12	-20
	LDR	R3	R12
	BRZ	R3	IFSKIP1
# RETURN					#l106  
	LDR	R15	FP
	MOV	R11	FP
	ADI	R11	-4
	LDR	R14	R11
	LDR	R3	l106
	STR	R3	FP
	MOV	SP	FP
	MOV	FP	R14
	JMR	R15	
# JMP					#ELSESKIP0  
	JMP	ELSESKIP0	
# Math					#l106 V102 t136
IFSKIP1	LDR	R3	l106
	MOV	R12	FP
	ADI	R12	-12
	LDR	R4	R12
	SUB	R4	R3
	MOV	R12	FP
	ADI	R12	-24
	STR	R4	R12
# FRAME					#F103 this 
	MOV	R1	SP
	LDR	R2	FREE
	CMP	R1	R2
	BLT	R1	ERROR
	MOV	R10	FP
	MOV	R14	SP
	ADI	SP	-4
	STR	R10	SP
	ADI	SP	-4
# Put this onto ARS			
	MOV	R11	R10
	ADI	R11	-8
	LDR	R8	R11
# END Put this onto ARS			
	STR	R8	SP
	ADI	SP	-4
# PUSH					#t136  
	MOV	R12	FP
	ADI	R12	-24
	LDR	R3	R12
	STR	R3	SP
	ADI	SP	-4
# CALL					#fib(int)  
	MOV	R10	PC
	ADI	R10	21
	MOV	FP	R14
	STR	R10	FP
	JMP	fib(int)	
# PEEK					#t137  
	LDR	R7	SP
	MOV	R12	FP
	ADI	R12	-28
	STR	R7	R12
# Math					#l109 V102 t138
	LDR	R3	l109
	MOV	R12	FP
	ADI	R12	-12
	LDR	R4	R12
	SUB	R4	R3
	MOV	R12	FP
	ADI	R12	-32
	STR	R4	R12
# FRAME					#F103 this 
	MOV	R1	SP
	LDR	R2	FREE
	CMP	R1	R2
	BLT	R1	ERROR
	MOV	R10	FP
	MOV	R14	SP
	ADI	SP	-4
	STR	R10	SP
	ADI	SP	-4
# Put this onto ARS			
	MOV	R11	R10
	ADI	R11	-8
	LDR	R8	R11
# END Put this onto ARS			
	STR	R8	SP
	ADI	SP	-4
# PUSH					#t138  
	MOV	R12	FP
	ADI	R12	-32
	LDR	R3	R12
	STR	R3	SP
	ADI	SP	-4
# CALL					#fib(int)  
	MOV	R10	PC
	ADI	R10	21
	MOV	FP	R14
	STR	R10	FP
	JMP	fib(int)	
# PEEK					#t139  
	LDR	R7	SP
	MOV	R12	FP
	ADI	R12	-36
	STR	R7	R12
# Math					#t139 t137 t140
	MOV	R12	FP
	ADI	R12	-36
	LDR	R3	R12
	MOV	R12	FP
	ADI	R12	-28
	LDR	R4	R12
	ADD	R4	R3
	MOV	R12	FP
	ADI	R12	-40
	STR	R4	R12
# RETURN					#t140  
	LDR	R15	FP
	MOV	R11	FP
	ADI	R11	-4
	LDR	R14	R11
	MOV	R12	FP
	ADI	R12	-40
	LDR	R3	R12
	STR	R3	FP
	MOV	SP	FP
	MOV	FP	R14
	JMR	R15	
# RTN					#  
ELSESKIP0	LDR	R15	FP
	MOV	R11	FP
	ADI	R11	-4
	LDR	R14	R11
	MOV	SP	FP
	MOV	FP	R14
	JMR	R15	
# FUNC					#F111  
main	ADI	SP	-68
# WRTC					#l116  
	LDB	R3	l116
	STB	R3	OUTPUT
	TRP	3	
# RDI					#V112  
	TRP	2	
	LDR	R3	INPUT
	MOV	R12	FP
	ADI	R12	-20
	STR	R3	R12
# WRTC					#l117  
	LDB	R3	l117
	STB	R3	OUTPUT
	TRP	3	
# Boolean					#l104 V112 t141
WHILEBEGIN0	LDR	R3	l104
	MOV	R12	FP
	ADI	R12	-20
	LDR	R4	R12
	CMP	R4	R3
	BNZ	R4	BRN2
	CMP	R4	R4
	MOV	R12	FP
	ADI	R12	-68
	STR	R4	R12
	JMP	BRNEND2	
BRN2	LDR	R4	l106
	MOV	R12	FP
	ADI	R12	-68
	STR	R4	R12
BRNEND2	CMP	R13	R13
# Branch					#t141 WHILEEND0 
	MOV	R12	FP
	ADI	R12	-68
	LDR	R3	R12
	BRZ	R3	WHILEEND0
# Boolean					#l104 V112 t142
	LDR	R3	l104
	MOV	R12	FP
	ADI	R12	-20
	LDR	R4	R12
	CMP	R4	R3
	BLT	R4	BRN3
	CMP	R4	R4
	MOV	R12	FP
	ADI	R12	-72
	STR	R4	R12
	JMP	BRNEND3	
BRN3	LDR	R4	l106
	MOV	R12	FP
	ADI	R12	-72
	STR	R4	R12
BRNEND3	CMP	R13	R13
# Branch					#t142 IFSKIP2 
	MOV	R12	FP
	ADI	R12	-72
	LDR	R3	R12
	BRZ	R3	IFSKIP2
# Math					#l120 V112 t143
	LDR	R3	l120
	MOV	R12	FP
	ADI	R12	-20
	LDR	R4	R12
	ADD	R4	R3
	MOV	R12	FP
	ADI	R12	-76
	STR	R4	R12
# MOVE					#t143 V112 
	MOV	R12	FP
	ADI	R12	-76
	LDR	R4	R12
	MOV	R12	FP
	ADI	R12	-20
	STR	R4	R12
# WRTI					#V112  
	MOV	R12	FP
	ADI	R12	-20
	LDR	R3	R12
	STR	R3	OUTPUT
	TRP	1	
# MOVE					#l104 V114 
	LDR	R4	l104
	MOV	R12	FP
	ADI	R12	-24
	STR	R4	R12
# Boolean					#l104 V112 t144
WHILEBEGIN1	LDR	R3	l104
	MOV	R12	FP
	ADI	R12	-20
	LDR	R4	R12
	CMP	R4	R3
	BGT	R4	BRN4
	CMP	R4	R4
	MOV	R12	FP
	ADI	R12	-28
	STR	R4	R12
	JMP	BRNEND4	
BRN4	LDR	R4	l106
	MOV	R12	FP
	ADI	R12	-28
	STR	R4	R12
BRNEND4	CMP	R13	R13
# Branch					#t144 WHILEEND1 
	MOV	R12	FP
	ADI	R12	-28
	LDR	R3	R12
	BRZ	R3	WHILEEND1
# MOVE					#V112 V113 
	MOV	R12	FP
	ADI	R12	-20
	LDR	R4	R12
	MOV	R12	FP
	ADI	R12	-16
	STR	R4	R12
# Boolean					#l106 V113 t145
WHILEBEGIN2	LDR	R3	l106
	MOV	R12	FP
	ADI	R12	-16
	LDR	R4	R12
	CMP	R4	R3
	BGT	R4	BRN5
	BRZ	R4	BRN5
	CMP	R4	R4
	MOV	R12	FP
	ADI	R12	-32
	STR	R4	R12
	JMP	BRNEND5	
BRN5	LDR	R4	l106
	MOV	R12	FP
	ADI	R12	-32
	STR	R4	R12
BRNEND5	CMP	R13	R13
# Branch					#t145 WHILEEND2 
	MOV	R12	FP
	ADI	R12	-32
	LDR	R3	R12
	BRZ	R3	WHILEEND2
# Math					#l124 V113 t146
	LDR	R3	l124
	MOV	R12	FP
	ADI	R12	-16
	LDR	R4	R12
	MUL	R4	R3
	MOV	R12	FP
	ADI	R12	-36
	STR	R4	R12
# Boolean					#l125 t146 t147
	LDR	R3	l125
	MOV	R12	FP
	ADI	R12	-36
	LDR	R4	R12
	CMP	R4	R3
	BGT	R4	BRN6
	CMP	R4	R4
	MOV	R12	FP
	ADI	R12	-40
	STR	R4	R12
	JMP	BRNEND6	
BRN6	LDR	R4	l106
	MOV	R12	FP
	ADI	R12	-40
	STR	R4	R12
BRNEND6	CMP	R13	R13
# Branch					#t147 IFSKIP3 
	MOV	R12	FP
	ADI	R12	-40
	LDR	R3	R12
	BRZ	R3	IFSKIP3
# Math					#V114 l109 t148
	MOV	R12	FP
	ADI	R12	-24
	LDR	R3	R12
	LDR	R4	l109
	MUL	R4	R3
	MOV	R12	FP
	ADI	R12	-44
	STR	R4	R12
# Math					#l124 V113 t149
	LDR	R3	l124
	MOV	R12	FP
	ADI	R12	-16
	LDR	R4	R12
	MUL	R4	R3
	MOV	R12	FP
	ADI	R12	-48
	STR	R4	R12
# Math					#t149 t148 t150
	MOV	R12	FP
	ADI	R12	-48
	LDR	R3	R12
	MOV	R12	FP
	ADI	R12	-44
	LDR	R4	R12
	ADD	R4	R3
	MOV	R12	FP
	ADI	R12	-52
	STR	R4	R12
# MOVE					#t150 V114 
	MOV	R12	FP
	ADI	R12	-52
	LDR	R4	R12
	MOV	R12	FP
	ADI	R12	-24
	STR	R4	R12
# Math					#l106 V113 t151
IFSKIP3	LDR	R3	l106
	MOV	R12	FP
	ADI	R12	-16
	LDR	R4	R12
	SUB	R4	R3
	MOV	R12	FP
	ADI	R12	-56
	STR	R4	R12
# MOVE					#t151 V113 
	MOV	R12	FP
	ADI	R12	-56
	LDR	R4	R12
	MOV	R12	FP
	ADI	R12	-16
	STR	R4	R12
# JMP					#WHILEBEGIN2  
	JMP	WHILEBEGIN2	
# Math					#l106 V112 t152
WHILEEND2	LDR	R3	l106
	MOV	R12	FP
	ADI	R12	-20
	LDR	R4	R12
	SUB	R4	R3
	MOV	R12	FP
	ADI	R12	-60
	STR	R4	R12
# MOVE					#t152 V112 
	MOV	R12	FP
	ADI	R12	-60
	LDR	R4	R12
	MOV	R12	FP
	ADI	R12	-20
	STR	R4	R12
# JMP					#WHILEBEGIN1  
	JMP	WHILEBEGIN1	
# WRTI					#V114  
WHILEEND1	MOV	R12	FP
	ADI	R12	-24
	LDR	R3	R12
	STR	R3	OUTPUT
	TRP	1	
# WRTC					#l117  
	LDB	R3	l117
	STB	R3	OUTPUT
	TRP	3	
# JMP					#ELSESKIP2  
	JMP	ELSESKIP2	
# FRAME					#F103 V115 
IFSKIP2	MOV	R1	SP
	LDR	R2	FREE
	CMP	R1	R2
	BLT	R1	ERROR
	MOV	R10	FP
	MOV	R14	SP
	ADI	SP	-4
	STR	R10	SP
	ADI	SP	-4
# Put this onto ARS			
	MOV	R11	R10
	ADI	R11	-12
	LDR	R8	R11
# END Put this onto ARS			
	STR	R8	SP
	ADI	SP	-4
# PUSH					#V112  
	MOV	R12	FP
	ADI	R12	-20
	LDR	R3	R12
	STR	R3	SP
	ADI	SP	-4
# CALL					#fib(int)  
	MOV	R10	PC
	ADI	R10	21
	MOV	FP	R14
	STR	R10	FP
	JMP	fib(int)	
# PEEK					#t154  
	LDR	R7	SP
	MOV	R12	FP
	ADI	R12	-64
	STR	R7	R12
# MOVE					#t154 V114 
	MOV	R12	FP
	ADI	R12	-64
	LDR	R4	R12
	MOV	R12	FP
	ADI	R12	-24
	STR	R4	R12
# WRTI					#V114  
	MOV	R12	FP
	ADI	R12	-24
	LDR	R3	R12
	STR	R3	OUTPUT
	TRP	1	
# WRTC					#l117  
	LDB	R3	l117
	STB	R3	OUTPUT
	TRP	3	
# WRTC					#l116  
ELSESKIP2	LDB	R3	l116
	STB	R3	OUTPUT
	TRP	3	
# RDI					#V112  
	TRP	2	
	LDR	R3	INPUT
	MOV	R12	FP
	ADI	R12	-20
	STR	R3	R12
# WRTC					#l117  
	LDB	R3	l117
	STB	R3	OUTPUT
	TRP	3	
# JMP					#WHILEBEGIN0  
	JMP	WHILEBEGIN0	
# RTN					#  
WHILEEND0	LDR	R15	FP
	MOV	R11	FP
	ADI	R11	-4
	LDR	R14	R11
	MOV	SP	FP
	MOV	FP	R14
	JMR	R15	
l124	.INT	3	
l109	.INT	2	
l125	.INT	15	
l106	.INT	1	
l104	.INT	0	
l120	.INT	-1	
l117	.BYT	10	
l116	.BYT	'>'	
FREE	.INT	stFREE	
stFREE	.INT	0	
